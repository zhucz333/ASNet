CMAKE_MINIMUM_REQUIRED (VERSION 3.5)

PROJECT (ASNet CXX)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

SET(INC_PATH ${PROJECT_SOURCE_DIR}/../include)
SET(LIB_PATH ${PROJECT_SOURCE_DIR}/../lib)
SET(BIN_PATH ${PROJECT_SOURCE_DIR}/../bin)			
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BIN_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_PATH})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${BIN_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_PATH})

SET(MTHREAD_PATH ${PROJECT_SOURCE_DIR}/../../MThread)
SET(MTHREAD_INC_PATH ${MTHREAD_PATH}/include)
SET(MTHREAD_LIB_PATH ${MTHREAD_PATH}/lib)

IF(USE_32BITS)				
	MESSAGE(STATUS "Using 32bits")
	SET(ARCH "32")
ELSE()	
	MESSAGE(STATUS "Using 64bits")
	SET(ARCH "64")
ENDIF()

SET(TARGETBIN ASNet)

FILE(GLOB_RECURSE ASNET_HEADERS *.h)
AUX_SOURCE_DIRECTORY(. ASNET_SRCS)
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")
	
	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -pthread")

	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()
	
	LIST(REMOVE_ITEM ASNET_HEADERS ${PROJECT_SOURCE_DIR}/ASNetAPIIOCP.h)
	LIST(REMOVE_ITEM ASNET_HEADERS ${PROJECT_SOURCE_DIR}/ASNetAPIIOCPContext.h)
	LIST(REMOVE_ITEM ASNET_SRCS ./ASNetAPIIOCP.cpp)	
	LIST(REMOVE_ITEM ASNET_SRCS ./ConnectionIOCP.cpp)

	INSTALL(FILES ${LIB_PATH}/lib${TARGETBIN}${ARCH}$<$<CONFIG:Debug>:D>.so DESTINATION ${BIN_PATH})
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")
	
	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)

	LIST(REMOVE_ITEM ASNET_HEADERS ${PROJECT_SOURCE_DIR}/ASNetAPIEpoll.h)
	LIST(REMOVE_ITEM ASNET_HEADERS ${PROJECT_SOURCE_DIR}/EventEpoll.h)
	LIST(REMOVE_ITEM ASNET_HEADERS ${PROJECT_SOURCE_DIR}/IEvent.h)
	LIST(REMOVE_ITEM ASNET_SRCS ./ASNetAPIEpoll.cpp)	
	LIST(REMOVE_ITEM ASNET_SRCS ./ConnectionEpoll.cpp)
	LIST(REMOVE_ITEM ASNET_SRCS ./EventEpoll.cpp)
ENDIF()

SET(LIBS "MThread${ARCH}$<$<CONFIG:Debug>:D>")

ADD_LIBRARY(${TARGETBIN} SHARED ${ASNET_HEADERS} ${ASNET_SRCS})

TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_INC_PATH})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB_PATH})
TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${LIBS})
SET_TARGET_PROPERTIES(${TARGETBIN} PROPERTIES OUTPUT_NAME "${TARGETBIN}${ARCH}$<$<CONFIG:Debug>:D>")

IF (CMAKE_BUILD_TYPE STREQUAL Debug)
	ADD_DEFINITIONS(-DDEBUG)
ENDIF()

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")

	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -Wno-sign-compare -pthread")

	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()

ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")

	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -DASNETAPI_EXPORTS)
	TARGET_LINK_LIBRARIES(${TARGETBIN} ws2_32)
ENDIF()

INSTALL(FILES IASNetAPI.h IASNetAPIClientSPI.h IASNetAPIPacketHelper.h DESTINATION ${INC_PATH})

ADD_SUBDIRECTORY(test)
